{
    "openapi": "3.1.0",
    "info": {
        "title": "Weather MCP Server",
        "description": "MCP server for weather data using Open-Meteo API (no API key required!)",
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "http://agentgateway.mixwarecs-home.net/weather-api",
            "description": "Weather service deployment"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Root",
                "description": "Root endpoint with API information",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Health",
                "description": "Health check endpoint",
                "operationId": "health_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/weather": {
            "get": {
                "summary": "Get Weather Http",
                "description": "Get weather for a location via HTTP GET\n\nArgs:\n    location: City name (query parameter)\n    \nExample:\n    GET /weather?location=Tallahassee\n    GET /weather?location=London\n    GET /weather?location=Tokyo",
                "operationId": "get_weather_http_weather_get",
                "parameters": [
                    {
                        "name": "location",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Location"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}